environment:
  python_requirements_txt: requirements.txt
inputs:
  question:
    type: string
    is_chat_input: true
    default: What is the code for Website Related Issues
  chat_history:
    type: list
    is_chat_input: false
    is_chat_history: true
outputs:
  output:
    type: string
    reference: ${answer_the_question_with_context.output}
    evaluation_only: false
    is_chat_output: true
nodes:
- name: modify_query_with_history
  type: llm
  source:
    type: code
    path: modify_query_with_history.jinja2
  inputs:
    deployment_name: <gpt35-turbo-deployment-name>
    temperature: 1
    top_p: 1
    max_tokens: 1000
    presence_penalty: 0
    frequency_penalty: 0
    chat_history: ${inputs.chat_history}
    question: ${flow.question}
  provider: AzureOpenAI
  connection: <openai-connection-name>
  api: chat
  module: promptflow.tools.aoai
  use_variants: false
- name: search_question_from_indexed_docs
  type: python
  source:
    type: package
    tool: promptflow_vectordb.tool.common_index_lookup.search
  inputs:
    mlindex_content: >
      embeddings:
        api_base: https://<openai-name>.openai.azure.com/
        api_type: azure
        api_version: 2023-07-01-preview
        batch_size: '16'
        connection:
            id: /subscriptions/<sub-id>/resourceGroups/<resource-group-name>/providers/Microsoft.MachineLearningServices/workspaces/<machine-learning-workspace-name>/connections/<openai-connection-name>
        connection_type: workspace_connection
        deployment: <text-embeddeding-deployment-name>
        dimension: 1536
        file_format_version: '2'
        kind: open_ai
        model: text-embedding-ada-002
        schema_version: '2'
      index:
        api_version: 2023-07-01-preview
        connection:
            id: /subscriptions/<sub-id>/resourceGroups/<resource-group-name>/providers/Microsoft.MachineLearningServices/workspaces/<machine-learning-workspace-name>/connections/<search-connection-name>
        connection_type: workspace_connection
        endpoint: https://<search-name>.search.windows.net
        engine: azure-sdk
        field_mapping:
            content: content
            embedding: contentVector
            filename: filepath
            metadata: meta_json_string
            title: title
            url: url
        index: <vector-index-name>
        kind: acs
        semantic_configuration_name: azureml-default
    queries: ${modify_query_with_history.output}
    query_type: Vector
    top_k: 2
  use_variants: false
- name: generate_prompt_context
  type: python
  source:
    type: code
    path: generate_prompt_context.py
  inputs:
    search_result: ${search_question_from_indexed_docs.output}
  aggregation: false
  use_variants: false
- name: Prompt_variants
  use_variants: true
- name: answer_the_question_with_context
  type: llm
  source:
    type: code
    path: answer_the_question_with_context.jinja2
  inputs:
    deployment_name: <gpt35-turbo-deployment-name>
    temperature: 0
    top_p: 1
    max_tokens: 1000
    presence_penalty: 0
    frequency_penalty: 0
    prompt_text: ${Prompt_variants.output}
  provider: AzureOpenAI
  connection: <openai-connection-name>
  api: chat
  module: promptflow.tools.aoai
  aggregation: false
  use_variants: false
node_variants:
  Prompt_variants:
    default_variant_id: Variant_0
    variants:
      Variant_0:
        node:
          type: prompt
          source:
            type: code
            path: Prompt_variants__Variant_0.jinja2
          inputs:
            chat_history: ${flow.chat_history}
            contexts: ${generate_prompt_context.output}
            question: ${flow.question}
          aggregation: false
      Variant_1:
        node:
          type: prompt
          source:
            type: code
            path: Prompt_variants__Variant_1.jinja2
          inputs:
            chat_history: ${flow.chat_history}
            contexts: ${generate_prompt_context.output}
            question: ${flow.question}
          aggregation: false
      Variant_2:
        node:
          type: prompt
          source:
            type: code
            path: Prompt_variants__Variant_2.jinja2
          inputs:
            chat_history: ${flow.chat_history}
            contexts: ${generate_prompt_context.output}
            question: ${flow.question}
          aggregation: false
